{"mappings":"ACCA,MAAM,EAAS,SAAS,cAAc,CAAC,QACjC,EAAa,SAAS,cAAc,CAAC,iBACrC,EAAe,SAAS,cAAc,CAAC,cACvC,EAAe,SAAS,cAAc,CAAC,cACvC,EAAe,SAAS,cAAc,CAAC,cACvC,EAAgB,SAAS,cAAc,CAAC,gBAyC9C,eAAe,IACX,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,4DAE7B,OADa,MAAM,EAAS,IAAI,EAEpC,CAAE,MAAO,EAAO,CAEZ,MADA,QAAQ,KAAK,CAAC,eAAgB,GACxB,CACV,CACJ,CAGA,eAAe,IACX,GAAI,CACA,IAAM,EAAS,MAAM,IACrB,QAAQ,GAAG,CAAC,iBAAkB,GAC9B,EAAmB,GACnB,OAAO,OAAO,CAAG,CACrB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,yBAA0B,EAC5C,CACJ,CAGA,SAAS,EAAmB,CAAO,EAC/B,IAAM,EAAgB,SAAS,cAAc,CAAC,eAE9C,CAAA,EAAc,SAAS,CAAG,GAG1B,EAAQ,OAAO,CAAC,AAAA,IACZ,IAAM,EAAW,SAAS,aAAa,CAAC,MAElC,EAAe,SAAS,aAAa,CAAC,MACtC,EAAmB,SAAS,cAAc,CAAC,EAAO,IAAI,EAC5D,EAAa,WAAW,CAAC,GACzB,EAAS,WAAW,CAAC,GAErB,IAAM,EAAe,SAAS,aAAa,CAAC,MACtC,EAAmB,SAAS,cAAc,CAAC,EAAO,UAAU,EAClE,EAAa,WAAW,CAAC,GACzB,EAAS,WAAW,CAAC,GAErB,IAAM,EAAe,SAAS,aAAa,CAAC,MACtC,EAAmB,SAAS,cAAc,CAAC,EAAO,WAAW,EACnE,EAAa,WAAW,CAAC,GACzB,EAAS,WAAW,CAAC,GAErB,EAAc,WAAW,CAAC,EAC9B,EACJ,CAvFA,OAAO,MAAM,CAGb,WACI,GACJ,EAGA,EAAO,gBAAgB,CAAC,QAAS,KAC7B,EAAW,SAAS,CAAC,MAAM,CAAC,OAChC,GAEA,EAAa,gBAAgB,CAAC,QAAS,AAAC,IAgFpC,EADsB,AA9EP,QA8Ee,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,GA7E5E,GAEA,EAAa,gBAAgB,CAAC,QAAS,AAAC,IAkFpC,EADoB,AAhFL,QAgFa,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,UAAU,CAAC,aAAa,CAAC,EAAE,UAAU,GA/EtF,GAEA,EAAa,gBAAgB,CAAC,QAAS,AAAC,IAoFpC,EADmB,AAlFJ,QAkFY,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,WAAW,CAAC,aAAa,CAAC,EAAE,WAAW,GAjFvF,GAGA,EAAc,gBAAgB,CAAC,QAAS,WACpC,IAAM,EAAa,IAAI,CAAC,KAAK,CAAC,WAAW,GAMzC,EAJqB,OAAO,OAAO,CAAC,MAAM,CAAC,AAAA,GACvC,EAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IACjC,EAAK,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,IAG/C","sources":["<anon>","src/function.js"],"sourcesContent":["var $e8b6992f320f6eda$exports = {};\n// Hämtar html-element från DOM\nconst $e8b6992f320f6eda$var$menuEl = document.getElementById(\"menu\");\nconst $e8b6992f320f6eda$var$dropdownEl = document.getElementById(\"dropdown-menu\");\nconst $e8b6992f320f6eda$var$courseCodeEl = document.getElementById(\"courseCode\");\nconst $e8b6992f320f6eda$var$courseNameEl = document.getElementById(\"courseName\");\nconst $e8b6992f320f6eda$var$courseProgEl = document.getElementById(\"courseProg\");\nconst $e8b6992f320f6eda$var$searchInputEl = document.getElementById(\"search-input\");\n// Initialisering när sidan laddas om\nwindow.onload = $e8b6992f320f6eda$var$init;\n// Funktion för att initialisera applikationen och hämta information\nfunction $e8b6992f320f6eda$var$init() {\n    $e8b6992f320f6eda$var$processData();\n}\n//Eventlistener\n$e8b6992f320f6eda$var$menuEl.addEventListener('click', ()=>{\n    $e8b6992f320f6eda$var$dropdownEl.classList.toggle('show');\n});\n$e8b6992f320f6eda$var$courseCodeEl.addEventListener(\"click\", (event)=>{\n    $e8b6992f320f6eda$var$courseCodeSort(courses);\n});\n$e8b6992f320f6eda$var$courseNameEl.addEventListener(\"click\", (event)=>{\n    $e8b6992f320f6eda$var$courseNameSort(courses);\n});\n$e8b6992f320f6eda$var$courseProgEl.addEventListener(\"click\", (event)=>{\n    $e8b6992f320f6eda$var$courseProgSort(courses);\n});\n//Filtrera efter sökfras\n$e8b6992f320f6eda$var$searchInputEl.addEventListener('input', function() {\n    const filterData = this.value.toLowerCase();\n    const filteredData = window.courses.filter((item)=>item.code.toLowerCase().includes(filterData) || item.coursename.toLowerCase().includes(filterData));\n    $e8b6992f320f6eda$var$coursesInfoDisplay(filteredData);\n});\n//Hämta kurser\nasync function $e8b6992f320f6eda$var$getCoursesInfo() {\n    try {\n        const response = await fetch('https://webbutveckling.miun.se/files/ramschema_ht24.json');\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Fetch error:', error);\n        throw error;\n    }\n}\n// Användning av den asynkrona funktionen\nasync function $e8b6992f320f6eda$var$processData() {\n    try {\n        const result = await $e8b6992f320f6eda$var$getCoursesInfo();\n        console.log('Received data:', result);\n        $e8b6992f320f6eda$var$coursesInfoDisplay(result);\n        window.courses = result;\n    } catch (error) {\n        console.error('Error processing data:', error);\n    }\n}\n// Visa information för kurser\nfunction $e8b6992f320f6eda$var$coursesInfoDisplay(courses1) {\n    const coursesListEl = document.getElementById('courses-list');\n    // Rensa tidigare innehåll\n    coursesListEl.innerHTML = '';\n    // Loopa genom och skapa nya list element\n    courses1.forEach((course)=>{\n        const newRowEl = document.createElement('tr');\n        const courseCodeEl = document.createElement('td');\n        const courseCodeTextEl = document.createTextNode(course.code);\n        courseCodeEl.appendChild(courseCodeTextEl);\n        newRowEl.appendChild(courseCodeEl);\n        const courseNameEl = document.createElement('td');\n        const courseNameTextEl = document.createTextNode(course.coursename);\n        courseNameEl.appendChild(courseNameTextEl);\n        newRowEl.appendChild(courseNameEl);\n        const courseProgEl = document.createElement('td');\n        const courseProgTextEl = document.createTextNode(course.progression);\n        courseProgEl.appendChild(courseProgTextEl);\n        newRowEl.appendChild(courseProgEl);\n        coursesListEl.appendChild(newRowEl);\n    });\n}\n// Sortera efter kod\nfunction $e8b6992f320f6eda$var$courseCodeSort(courses1) {\n    const sortedCourses = courses1.sort((a, b)=>a.code.localeCompare(b.code));\n    $e8b6992f320f6eda$var$coursesInfoDisplay(sortedCourses);\n}\n// Sortera efter kursnamn\nfunction $e8b6992f320f6eda$var$courseNameSort(courses1) {\n    const sortedNames = courses1.sort((a, b)=>a.coursename.localeCompare(b.coursename));\n    $e8b6992f320f6eda$var$coursesInfoDisplay(sortedNames);\n}\n// Sortera efter progression\nfunction $e8b6992f320f6eda$var$courseProgSort(courses1) {\n    const sortedProg = courses1.sort((a, b)=>a.progression.localeCompare(b.progression));\n    $e8b6992f320f6eda$var$coursesInfoDisplay(sortedProg);\n}\n\n\n//# sourceMappingURL=index.efe583f4.js.map\n","// Hämtar html-element från DOM\nconst menuEl = document.getElementById(\"menu\");\nconst dropdownEl = document.getElementById(\"dropdown-menu\");\nconst courseCodeEl = document.getElementById(\"courseCode\");\nconst courseNameEl = document.getElementById(\"courseName\");\nconst courseProgEl = document.getElementById(\"courseProg\");\nconst searchInputEl = document.getElementById(\"search-input\");\n\n\n// Initialisering när sidan laddas om\nwindow.onload = init;\n\n// Funktion för att initialisera applikationen och hämta information\nfunction init() {\n    processData();\n}\n\n//Eventlistener\nmenuEl.addEventListener('click', () => {\n    dropdownEl.classList.toggle('show');\n})\n\ncourseCodeEl.addEventListener(\"click\", (event) => {\n    courseCodeSort(courses);\n});\n\ncourseNameEl.addEventListener(\"click\", (event) => {\n    courseNameSort(courses);\n});\n\ncourseProgEl.addEventListener(\"click\", (event) => {\n    courseProgSort(courses);\n});\n\n//Filtrera efter sökfras\nsearchInputEl.addEventListener('input', function() {\n    const filterData = this.value.toLowerCase();\n\n    const filteredData = window.courses.filter(item => \n        item.code.toLowerCase().includes(filterData) || \n        item.coursename.toLowerCase().includes(filterData)\n    );\n    coursesInfoDisplay(filteredData);\n});\n\n\n//Hämta kurser\nasync function getCoursesInfo() {\n    try {\n        const response = await fetch('https://webbutveckling.miun.se/files/ramschema_ht24.json');\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Fetch error:', error);\n        throw error;\n    }\n};\n\n// Användning av den asynkrona funktionen\nasync function processData() {\n    try {\n        const result = await getCoursesInfo();\n        console.log('Received data:', result);\n        coursesInfoDisplay(result);\n        window.courses = result;\n    } catch (error) {\n        console.error('Error processing data:', error);\n    }\n}\n\n// Visa information för kurser\nfunction coursesInfoDisplay(courses) {\n    const coursesListEl = document.getElementById('courses-list'); \n    // Rensa tidigare innehåll\n    coursesListEl.innerHTML = ''; \n\n    // Loopa genom och skapa nya list element\n    courses.forEach(course => {\n        const newRowEl = document.createElement('tr');\n\n        const courseCodeEl = document.createElement('td');\n        const courseCodeTextEl = document.createTextNode(course.code);\n        courseCodeEl.appendChild(courseCodeTextEl);\n        newRowEl.appendChild(courseCodeEl); \n\n        const courseNameEl = document.createElement('td');\n        const courseNameTextEl = document.createTextNode(course.coursename);\n        courseNameEl.appendChild(courseNameTextEl);\n        newRowEl.appendChild(courseNameEl); \n\n        const courseProgEl = document.createElement('td');\n        const courseProgTextEl = document.createTextNode(course.progression);\n        courseProgEl.appendChild(courseProgTextEl);\n        newRowEl.appendChild(courseProgEl);\n\n        coursesListEl.appendChild(newRowEl);\n    });\n}\n\n// Sortera efter kod\nfunction courseCodeSort(courses) {\n    const sortedCourses = courses.sort((a, b) => a.code.localeCompare(b.code)); \n    coursesInfoDisplay(sortedCourses); \n}\n\n // Sortera efter kursnamn\nfunction courseNameSort(courses) {\n    const sortedNames = courses.sort((a, b) => a.coursename.localeCompare(b.coursename));\n    coursesInfoDisplay(sortedNames);\n}\n\n// Sortera efter progression\nfunction courseProgSort(courses) {\n    const sortedProg = courses.sort((a, b) => a.progression.localeCompare(b.progression)); \n    coursesInfoDisplay(sortedProg);\n}"],"names":["$e8b6992f320f6eda$var$menuEl","document","getElementById","$e8b6992f320f6eda$var$dropdownEl","$e8b6992f320f6eda$var$courseCodeEl","$e8b6992f320f6eda$var$courseNameEl","$e8b6992f320f6eda$var$courseProgEl","$e8b6992f320f6eda$var$searchInputEl","$e8b6992f320f6eda$var$getCoursesInfo","response","fetch","json","error","console","$e8b6992f320f6eda$var$processData","result","log","$e8b6992f320f6eda$var$coursesInfoDisplay","window","courses","courses1","coursesListEl","innerHTML","forEach","course","newRowEl","createElement","courseCodeEl","courseCodeTextEl","createTextNode","code","appendChild","courseNameEl","courseNameTextEl","coursename","courseProgEl","courseProgTextEl","progression","onload","addEventListener","classList","toggle","event","sort","a","b","localeCompare","filterData","value","toLowerCase","filter","item","includes"],"version":3,"file":"index.efe583f4.js.map"}